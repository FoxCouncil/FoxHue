<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="labelWhitelist.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        3f+f2fL/jL/U/ydYaf82wfD/Ocr8/zrM/v8hdJD3AAAAUAEFBgAAAAADCSEpoC+o0f86zP3/Ocv8/zXA
        7/8uZHj/jsLY/6Hc9P9li5v/XH6N/4m60P9BWmT/k8rh/6Db8/91oLL/JG2F/znK+/85yvv/Osz9/y+o
        0f8JISmgAAAAAwAAAC0XUWXfOMb2/znK+/85yvv/Os3+/yaBoP9mj6D/odz0/4e5zv8+VV//Ok5X/1h6
        iP+c1e3/nNXs/0Nodv8socn/Osz+/znK+/85yvv/OMb2/xdRZd8AAAAtAwsNfieJqvs6zf//Ocr7/znK
        +/85y/3/MLHc/zljc/+Z0ej/g7HF/y9TYP8VQlH/WH2M/5rT6v+Dssb/JWF2/zfG9v85yvv/Ocr7/znK
        +/86zf//J4mq+wMLDX4LKDHHMrHc/znL/f85yvv/Ocr7/znK+/85yvv/JWyE/0xoc/8pW2z/LaLJ/zbC
        8f8jdZH/Rmp3/0Zlcf8pkbX/Os3//znK+/85yvv/Ocr7/znL/f8ysdz/CygxxwgdJKsvpc3/Osz+/znK
        +/85yvv/Ocr7/zrM/v8tocf/HWV9/zO45f86zP7/Ocv8/znK+/8oja//G1lu/za/7f85y/z/Ocr7/znK
        +/85yvv/Osz+/y+lzf8IHSSqAQMEbCWCovo6zf//Ocr7/znK+/85yvv/Ocr7/znJ+v85yfr/Ocv8/znK
        +/85yvv/Ocr7/znL/P83xPP/Ocr7/znK+/85yvv/Ocr7/znK+/86zf//JYKi+gEDBGwAAAA2Gl1z6DnK
        +/85yvv/Ocr7/znK+/85yvv/Ocr7/znK+/85yvv/Ocr7/znK+/85yvv/Ocr7/znK/P85yvv/Ocr7/znK
        +/85yvv/Ocr7/znK+/8aXXPoAAAANgAAABEQOUfGNr7s/znL/P85yvv/Ocr7/znK+/85yvv/Ocr7/znK
        +/85yvv/Ocr7/znK+/85yvv/Ocr7/znK+/85yvv/Ocr7/znK+/85y/z/Nr7s/xA5RsYAAAARSf//AAQQ
        E3wieZf7Ocn6/znL/P85yvv/Ocr7/znK+/85yvv/Ocr7/znK+/85yvv/Ocr7/znK+/85yvv/Ocr7/znK
        +/85yvv/Ocv8/znJ+v8ieZb7BA8TfEz//wAAAAAAAAAADQYUGZEje5n6Ocn6/znL/P85yvv/Ocr7/znK
        +/85yvv/Ocr7/znK+/85yvv/Ocr7/znK+/85yvv/Ocr7/znL/P85yfr/I3uZ+gYUGZEAAAANAAAAAAAA
        AAAAAAAAAAAACwUTGI8iepj6Ocn5/znL/P85yvv/Ocr7/znK+/85yvv/Ocr7/znK+/85yvv/Ocr7/znK
        +/85y/z/Ocn5/yJ6mPoFExiPAAAACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwUTF44ieZf6Ocn5/znL
        /P85yvv/Ocr7/znK+/85yvv/Ocr7/znK+/85yvv/Ocv8/znJ+f8ieZb6BRMXjgAAAAsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAACgUSF4sieJX4OMX1/zjI+P44yPj+OMj4/jjI+P44yPj+OMj4/jjI
        +P44xfX/IniV+AUSF4sAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwYU
        GJsUSFn8F1Fl+xdRZPsXUWT7F1Fk+xdRZPsXUWT7F1Fl+xRIWfwFFBibAAAACwAAAAAAAAAAAAAAAAAA
        AAAAAAAA8AAeAPAAHgDwAB4A8AAeAPAAHgDwAB4A4AAOAOAADgDAAAYAwAAGAMAABgCAAAIAgAACAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgAACAMAABgA=
</value>
  </data>
</root>